// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // The if statements series
    Mux16(a=lastout, b=false, sel=reset, out=resetout);

    // Checking whether to do reset or load
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=loadsel);

    // Perform the choice between reset and load according to pins.
    Mux16(a=resetout, b=in, sel=loadsel, out=loadout);

    // Calculate increased value.
    Inc16(in=lastout, out=increased);

    // Check whether to perform increment or not.
    Or(a=reset, b=load, out=onetrue);
    Not(in=onetrue, out=bothfalse);
    And(a=bothfalse, b=inc, out=incsel);
    Mux16(a=loadout, b=increased, sel=incsel, out=incout);

    // Setting the load pin
    Or(a=reset, b=load, out=resetorload);
    Or(a=resetorload, b=inc, out=loading);
    Register(in=incout, load=loading, out=out, out=lastout);
}
